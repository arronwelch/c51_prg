C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ST7565
OBJECT MODULE PLACED IN .\build\Debug\st7565.o
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe .\SRC\ST7565.C PRINT(.\build\Debug\st7565.lst) OMF2 TABS(4) CODE NOCOND 
                    -SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(C:\Keil_v5\C51\INC;.\src) DEFINE(__UVISION_VERSION=526) OBJECT(.\build
                    -\Debug\st7565.o)

line level    source

   1          
   2          #include "st7565.h"
   3          
   4          void delay_ms(uint t)
   5          {
   6   1          uint i,j;
   7   1          for ( i = 0; i < 99; i++)
   8   1          {
   9   2              for ( j = 0; j < t; j++);
  10   2          }
  11   1      }
  12          
  13          void LcdSt7565_WriteCmd(uchar cmd)
  14          {
  15   1          LCD12864_CS = 0;
  16   1          LCD12864_RS = 0;//select command mode
  17   1          LCD12864_RD = 1;//disable read
  18   1          LCD12864_WR = 0;//enable write
  19   1          _nop_();
  20   1          _nop_();
  21   1      
  22   1          DATA_PORT = cmd;
  23   1          _nop_();
  24   1          _nop_();
  25   1      
  26   1          LCD12864_WR = 1;//disable write
  27   1      }
  28          
  29          void LcdSt7565_WriteData(uchar dat)
  30          {
  31   1          LCD12864_CS = 0;
  32   1          LCD12864_RS = 1;//select data mode
  33   1          LCD12864_RD = 1;//disable read
  34   1          LCD12864_WR = 0;//enable write
  35   1          _nop_();
  36   1          _nop_();
  37   1      
  38   1          DATA_PORT = dat;
  39   1          _nop_();
  40   1          _nop_();
  41   1      
  42   1          LCD12864_WR = 1;//disable write
  43   1      }
  44          
  45          void Lcd12864_Init(void)
  46          {
  47   1          LCD12864_RSET = 0;
  48   1          delay_ms(1);//delay
  49   1          LCD12864_CS = 0;
  50   1          LCD12864_RSET = 1;
  51   1      
  52   1          LcdSt7565_WriteCmd(0xE2);//reset st7565
  53   1          delay_ms(1);
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 2   

  54   1      
  55   1      //-----------------------128*64-----------------------//
  56   1      // COM63
  57   1      // COM62
  58   1      // ...
  59   1      // COM02
  60   1      // COM01
  61   1      // COM00
  62   1      //      SEG000 SEG001 SEG002 ... SEG126 SEG127 ... SEG131
  63   1      //-----------------------128*64-----------------------//
  64   1      //从左到右从上到下
  65   1      //C语言
  66   1      //每行16个
  67   1      //纵向8点下高位
  68   1      
  69   1          //0xA0,Narmal(SEG0-SEG131) 0xA1,Reverse(SEG131-SEG0);
  70   1          LcdSt7565_WriteCmd(0xA0);//ADC Select (Segment Driver Direction Select)
  71   1      
  72   1          //0xC0,Narmal(COM0→COM63) 0xC8,Reverse(COM63→COM0);
  73   1          LcdSt7565_WriteCmd(0xC8);//Common Output Mode Select
  74   1      
  75   1          //0xA6,normal:RAM Data “H” 0xA7,reverse:RAM Data “L”
  76   1          LcdSt7565_WriteCmd(0xA6);//Display Normal/Reverse
  77   1      
  78   1          //0xA4,Normal display mode;0xA5,Display all points ON
  79   1          LcdSt7565_WriteCmd(0xA4);//Display All Points ON/OFF
  80   1      
  81   1          //0xA2,1/9 bias; 0xA3,1/7 bias
  82   1          LcdSt7565_WriteCmd(0xA2);//LCD Bias Set
  83   1      
  84   1          //The Booster Ratio (Double Byte Command)
  85   1          LcdSt7565_WriteCmd(0xF8);//Booster Ratio Select Mode Set
  86   1          LcdSt7565_WriteCmd(0x01);//5x
  87   1      
  88   1          //The Electronic Volume (Double Byte Command)
  89   1          LcdSt7565_WriteCmd(0x81);//Set the V0 output voltage electronic volume register
  90   1          LcdSt7565_WriteCmd(0x23);//0x00-0x3F
  91   1      
  92   1          //V0 Voltage Regulator Internal Resistor Ratio Set
  93   1          LcdSt7565_WriteCmd(0x25);//Select internal resistor ratio(Rb/Ra) mode
  94   1          
  95   1          //Power control set
  96   1          LcdSt7565_WriteCmd(0x2F);//Select internal power supply operating mode
  97   1          delay_ms(1);
  98   1      
  99   1           //Display start line set
 100   1           LcdSt7565_WriteCmd(0x40);//Sets the display RAM display start line address
 101   1      
 102   1           //Display ON/OFF
 103   1           LcdSt7565_WriteCmd(0xAF);
 104   1           delay_ms(1);
 105   1      }
 106          
 107          void Lcd12864_ClearScreen(void)
 108          {
 109   1          uchar page,x;
 110   1      
 111   1          for ( page = 0; page < 8; page++)
 112   1          {
 113   2              //Page address set
 114   2              LcdSt7565_WriteCmd(0xB0+page);//Sets the display RAM page address
 115   2              
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 3   

 116   2              //0-131 0x00,0x83 132bit ST7565 default
 117   2              //4-131 0x04,0x83 128bit LCD12864 use address!
 118   2              //Column address set upper bit[7:4]
 119   2              LcdSt7565_WriteCmd(0x10+0x00);
 120   2              //Column address set lower bit[3:0]
 121   2              LcdSt7565_WriteCmd(0x00+0x00);
 122   2      
 123   2              for(x=0;x<128;x++)
 124   2              {
 125   3                  LcdSt7565_WriteData(0x00);//clear screen dots(128*64)
 126   3              }
 127   2          }
 128   1      }
 129          
 130          
 131          #ifdef  CHAR_CODE
 132          
 133          #include"charcode.h"
 134          
 135          uchar Lcd12864_Write16CnCHAR(uchar x, uchar y, uchar *cn)
 136          {
 137   1          uchar j, x1, x2, wordNum;
 138   1      
 139   1          //--Y的坐标只能从0到7，大于则直接返回--//
 140   1          if(y > 7)
 141   1          {
 142   2              return 0;
 143   2          }
 144   1      
 145   1          //--X的坐标只能从0到128，大于则直接返回--//
 146   1          if(x > 128)
 147   1          {
 148   2              return 0;
 149   2          }
 150   1          y += 0xB0;     //求取Y坐标的值
 151   1          //--设置Y坐标--//
 152   1          //LcdSt7565_WriteCmd(y);
 153   1          while ( *cn != '\0')     //在C语言中字符串结束以‘\0’结尾
 154   1          {
 155   2              //--设置Y坐标--//
 156   2              LcdSt7565_WriteCmd(y);
 157   2      
 158   2              x1 = (x >> 4) & 0x0F;   //由于X坐标要两句命令，分高低4位，所以这里先取出高4位
 159   2              x2 = x & 0x0F;          //去低四位
 160   2              //--设置X坐标--//
 161   2              LcdSt7565_WriteCmd(0x10 + x1);   //高4位
 162   2              LcdSt7565_WriteCmd(0x00 + x2);  //低4位
 163   2      
 164   2              for (wordNum=0; wordNum<16; wordNum++)
 165   2              {
 166   3                  //--查询要写的字在字库中的位置--//
 167   3                  if (   (GB_16[wordNum].Index[0] == *(0+cn) )
 168   3                       &&(GB_16[wordNum].Index[1] == *(1+cn) )
 169   3                       &&(GB_16[wordNum].Index[2] == *(2+cn) )
 170   3                     )
 171   3                  {
 172   4                      for (j=0; j<32; j++) //写一个字
 173   4                      {       
 174   5                          if (j == 16)     //由于16X16用到两个Y坐标，当大于等于16时，切换坐标
 175   5                          {
 176   6                              //--设置Y坐标--//
 177   6                              LcdSt7565_WriteCmd(y + 1);
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 4   

 178   6                  
 179   6                              //--设置X坐标--//
 180   6                              LcdSt7565_WriteCmd(0x10 + x1);//高4位
 181   6                              LcdSt7565_WriteCmd(0x00 + x2);//低4位
 182   6                          }
 183   5                          LcdSt7565_WriteData(GB_16[wordNum].Msk[j]);
 184   5                      }
 185   4                      x += 16;
 186   4                      break;//重复字符不会覆盖写
 187   4                  }//if查到字结束    
 188   3              } //for查字结束 
 189   2              cn += 3;
 190   2          }   //while结束
 191   1          return 1;
 192   1      }
 193          
 194          #endif
 195          
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _delay_ms (BEGIN)
                                           ; SOURCE LINE # 4
;---- Variable 't' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 5
                                           ; SOURCE LINE # 7
;---- Variable 'i' assigned to Register 'R4/R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 FC                MOV     R4,A
0003         ?C0001:
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 9
;---- Variable 'j' assigned to Register 'R2/R3' ----
0003 E4                CLR     A
0004 FB                MOV     R3,A
0005 FA                MOV     R2,A
0006         ?C0004:
0006 C3                CLR     C
0007 EB                MOV     A,R3
0008 9F                SUBB    A,R7
0009 EA                MOV     A,R2
000A 9E                SUBB    A,R6
000B 5007              JNC     ?C0003
000D 0B                INC     R3
000E BB0001            CJNE    R3,#00H,?C0031
0011 0A                INC     R2
0012         ?C0031:
0012 80F2              SJMP    ?C0004
                                           ; SOURCE LINE # 10
0014         ?C0003:
0014 0D                INC     R5
0015 BD0001            CJNE    R5,#00H,?C0032
0018 0C                INC     R4
0019         ?C0032:
0019 ED                MOV     A,R5
001A 6463              XRL     A,#063H
001C 4C                ORL     A,R4
001D 70E4              JNZ     ?C0001
                                           ; SOURCE LINE # 11
001F         ?C0007:
001F 22                RET     
             ; FUNCTION _delay_ms (END)

             ; FUNCTION L?0033 (BEGIN)
0000 E500        R     MOV     A,x1
0002 2410              ADD     A,#010H
0004 FF                MOV     R7,A
0005 120000      R     LCALL   _LcdSt7565_WriteCmd
0008 AF00        R     MOV     R7,x2
             ; FUNCTION _LcdSt7565_WriteCmd (BEGIN)
                                           ; SOURCE LINE # 13
;---- Variable 'cmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 15
000A C2B2              CLR     LCD12864_CS
                                           ; SOURCE LINE # 16
000C C2A6              CLR     LCD12864_RS
                                           ; SOURCE LINE # 17
000E D2A5              SETB    LCD12864_RD
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 6   

                                           ; SOURCE LINE # 18
0010 C2A7              CLR     LCD12864_WR
                                           ; SOURCE LINE # 19
0012 00                NOP     
                                           ; SOURCE LINE # 20
0013 00                NOP     
                                           ; SOURCE LINE # 22
0014 8F80              MOV     P0,R7
                                           ; SOURCE LINE # 23
0016 00                NOP     
                                           ; SOURCE LINE # 24
0017 00                NOP     
                                           ; SOURCE LINE # 26
0018 D2A7              SETB    LCD12864_WR
                                           ; SOURCE LINE # 27
001A 22                RET     
             ; FUNCTION _LcdSt7565_WriteCmd (END)

             ; FUNCTION _LcdSt7565_WriteData (BEGIN)
                                           ; SOURCE LINE # 29
;---- Variable 'dat' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0000 C2B2              CLR     LCD12864_CS
                                           ; SOURCE LINE # 32
0002 D2A6              SETB    LCD12864_RS
                                           ; SOURCE LINE # 33
0004 D2A5              SETB    LCD12864_RD
                                           ; SOURCE LINE # 34
0006 C2A7              CLR     LCD12864_WR
                                           ; SOURCE LINE # 35
0008 00                NOP     
                                           ; SOURCE LINE # 36
0009 00                NOP     
                                           ; SOURCE LINE # 38
000A 8F80              MOV     P0,R7
                                           ; SOURCE LINE # 39
000C 00                NOP     
                                           ; SOURCE LINE # 40
000D 00                NOP     
                                           ; SOURCE LINE # 42
000E D2A7              SETB    LCD12864_WR
                                           ; SOURCE LINE # 43
0010 22                RET     
             ; FUNCTION _LcdSt7565_WriteData (END)

             ; FUNCTION Lcd12864_Init (BEGIN)
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
0000 C2B3              CLR     LCD12864_RSET
                                           ; SOURCE LINE # 48
0002 7F01              MOV     R7,#01H
0004 7E00              MOV     R6,#00H
0006 120000      R     LCALL   _delay_ms
                                           ; SOURCE LINE # 49
0009 C2B2              CLR     LCD12864_CS
                                           ; SOURCE LINE # 50
000B D2B3              SETB    LCD12864_RSET
                                           ; SOURCE LINE # 52
000D 7FE2              MOV     R7,#0E2H
000F 120000      R     LCALL   _LcdSt7565_WriteCmd
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 7   

                                           ; SOURCE LINE # 53
0012 7F01              MOV     R7,#01H
0014 120000      R     LCALL   _delay_ms
                                           ; SOURCE LINE # 70
0017 7FA0              MOV     R7,#0A0H
0019 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 73
001C 7FC8              MOV     R7,#0C8H
001E 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 76
0021 7FA6              MOV     R7,#0A6H
0023 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 79
0026 7FA4              MOV     R7,#0A4H
0028 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 82
002B 7FA2              MOV     R7,#0A2H
002D 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 85
0030 7FF8              MOV     R7,#0F8H
0032 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 86
0035 7F01              MOV     R7,#01H
0037 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 89
003A 7F81              MOV     R7,#081H
003C 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 90
003F 7F23              MOV     R7,#023H
0041 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 93
0044 7F25              MOV     R7,#025H
0046 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 96
0049 7F2F              MOV     R7,#02FH
004B 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 97
004E 7F01              MOV     R7,#01H
0050 120000      R     LCALL   _delay_ms
                                           ; SOURCE LINE # 100
0053 7F40              MOV     R7,#040H
0055 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 103
0058 7FAF              MOV     R7,#0AFH
005A 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 104
005D 7F01              MOV     R7,#01H
005F 020000      R     LJMP    _delay_ms
             ; FUNCTION Lcd12864_Init (END)

             ; FUNCTION Lcd12864_ClearScreen (BEGIN)
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 111
;---- Variable 'page' assigned to Register 'R6' ----
0000 E4                CLR     A
0001 FE                MOV     R6,A
0002         ?C0011:
0002 EE                MOV     A,R6
0003 C3                CLR     C
0004 9408              SUBB    A,#08H
0006 7480              MOV     A,#080H
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 8   

0008 9480              SUBB    A,#080H
000A 5027              JNC     ?C0017
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 114
000C EE                MOV     A,R6
000D 24B0              ADD     A,#0B0H
000F FF                MOV     R7,A
0010 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 119
0013 7F10              MOV     R7,#010H
0015 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 121
0018 E4                CLR     A
0019 FF                MOV     R7,A
001A 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 123
;---- Variable 'x' assigned to Register 'R5' ----
001D FD                MOV     R5,A
001E         ?C0014:
001E ED                MOV     A,R5
001F C3                CLR     C
0020 9480              SUBB    A,#080H
0022 7480              MOV     A,#080H
0024 9480              SUBB    A,#080H
0026 5008              JNC     ?C0013
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
0028 E4                CLR     A
0029 FF                MOV     R7,A
002A 120000      R     LCALL   _LcdSt7565_WriteData
                                           ; SOURCE LINE # 126
002D 0D                INC     R5
002E 80EE              SJMP    ?C0014
                                           ; SOURCE LINE # 127
0030         ?C0013:
0030 0E                INC     R6
0031 80CF              SJMP    ?C0011
                                           ; SOURCE LINE # 128
0033         ?C0017:
0033 22                RET     
             ; FUNCTION Lcd12864_ClearScreen (END)

             ; FUNCTION _Lcd12864_Write16CnCHAR (BEGIN)
                                           ; SOURCE LINE # 135
0000 8F00        R     MOV     x,R7
0002 8D00        R     MOV     y,R5
;---- Variable 'cn' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 140
0004 D3                SETB    C
0005 E500        R     MOV     A,y
0007 9407              SUBB    A,#07H
0009 7480              MOV     A,#080H
000B 9480              SUBB    A,#080H
000D 4003              JC      ?C0018
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
000F 7F00              MOV     R7,#00H
0011 22                RET     
                                           ; SOURCE LINE # 143
0012         ?C0018:
                                           ; SOURCE LINE # 146
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 9   

0012 D3                SETB    C
0013 E500        R     MOV     A,x
0015 9480              SUBB    A,#080H
0017 7480              MOV     A,#080H
0019 9480              SUBB    A,#080H
001B 4003              JC      ?C0020
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
001D 7F00              MOV     R7,#00H
001F 22                RET     
                                           ; SOURCE LINE # 149
0020         ?C0020:
                                           ; SOURCE LINE # 150
0020 74B0              MOV     A,#0B0H
0022 2500        R     ADD     A,y
0024 F500        R     MOV     y,A
0026         ?C0021:
                                           ; SOURCE LINE # 153
0026 120000      E     LCALL   ?C?CLDPTR
0029 7003              JNZ     $ + 5H
002B 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 156
002E AF00        R     MOV     R7,y
0030 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 158
0033 E500        R     MOV     A,x
0035 C4                SWAP    A
0036 540F              ANL     A,#0FH
0038 F500        R     MOV     x1,A
                                           ; SOURCE LINE # 159
003A E500        R     MOV     A,x
003C 540F              ANL     A,#0FH
003E F500        R     MOV     x2,A
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
0040 120000      R     LCALL   L?0033
                                           ; SOURCE LINE # 164
;---- Variable 'wordNum' assigned to Register 'R6' ----
0043 E4                CLR     A
0044 FE                MOV     R6,A
0045         ?C0023:
0045 EE                MOV     A,R6
0046 C3                CLR     C
0047 9410              SUBB    A,#010H
0049 7480              MOV     A,#080H
004B 9480              SUBB    A,#080H
004D 4003              JC      $ + 5H
004F 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 167
0052 120000      E     LCALL   ?C?CLDPTR
0055 FF                MOV     R7,A
0056 75F023            MOV     B,#023H
0059 EE                MOV     A,R6
005A A4                MUL     AB
005B 2400        R     ADD     A,#LOW GB_16
005D F582              MOV     DPL,A
005F E5F0              MOV     A,B
0061 3400        R     ADDC    A,#HIGH GB_16
0063 F583              MOV     DPH,A
0065 E4                CLR     A
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 10  

0066 93                MOVC    A,@A+DPTR
0067 6F                XRL     A,R7
0068 6003              JZ      $ + 5H
006A 020000      R     LJMP    ?C0025
006D 900001            MOV     DPTR,#01H
0070 120000      E     LCALL   ?C?CLDOPTR
0073 FF                MOV     R7,A
0074 75F023            MOV     B,#023H
0077 EE                MOV     A,R6
0078 A4                MUL     AB
0079 2400        R     ADD     A,#LOW GB_16+01H
007B F582              MOV     DPL,A
007D E5F0              MOV     A,B
007F 3400        R     ADDC    A,#HIGH GB_16+01H
0081 F583              MOV     DPH,A
0083 E4                CLR     A
0084 93                MOVC    A,@A+DPTR
0085 6F                XRL     A,R7
0086 7065              JNZ     ?C0025
0088 900002            MOV     DPTR,#02H
008B 120000      E     LCALL   ?C?CLDOPTR
008E FF                MOV     R7,A
008F 75F023            MOV     B,#023H
0092 EE                MOV     A,R6
0093 A4                MUL     AB
0094 2400        R     ADD     A,#LOW GB_16+02H
0096 F582              MOV     DPL,A
0098 E5F0              MOV     A,B
009A 3400        R     ADDC    A,#HIGH GB_16+02H
009C F583              MOV     DPH,A
009E E4                CLR     A
009F 93                MOVC    A,@A+DPTR
00A0 6F                XRL     A,R7
00A1 704A              JNZ     ?C0025
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 172
;---- Variable 'j' assigned to Register 'R5' ----
00A3 FD                MOV     R5,A
00A4         ?C0027:
00A4 ED                MOV     A,R5
00A5 F582              MOV     DPL,A
00A7 758300            MOV     DPH,#00H
00AA C3                CLR     C
00AB 9420              SUBB    A,#020H
00AD 7480              MOV     A,#080H
00AF 9480              SUBB    A,#080H
00B1 5032              JNC     ?C0028
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
00B3 E582              MOV     A,DPL
00B5 6410              XRL     A,#010H
00B7 700A              JNZ     ?C0030
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 177
00B9 E500        R     MOV     A,y
00BB 04                INC     A
00BC FF                MOV     R7,A
00BD 120000      R     LCALL   _LcdSt7565_WriteCmd
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
00C0 120000      R     LCALL   L?0033
                                           ; SOURCE LINE # 182
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 11  

00C3         ?C0030:
                                           ; SOURCE LINE # 183
00C3 75F023            MOV     B,#023H
00C6 EE                MOV     A,R6
00C7 A4                MUL     AB
00C8 2400        R     ADD     A,#LOW GB_16+03H
00CA F582              MOV     DPL,A
00CC E5F0              MOV     A,B
00CE 3400        R     ADDC    A,#HIGH GB_16+03H
00D0 F583              MOV     DPH,A
00D2 E582              MOV     A,DPL
00D4 2D                ADD     A,R5
00D5 F582              MOV     DPL,A
00D7 E4                CLR     A
00D8 3583              ADDC    A,DPH
00DA F583              MOV     DPH,A
00DC E4                CLR     A
00DD 93                MOVC    A,@A+DPTR
00DE FF                MOV     R7,A
00DF 120000      R     LCALL   _LcdSt7565_WriteData
                                           ; SOURCE LINE # 184
00E2 0D                INC     R5
00E3 80BF              SJMP    ?C0027
00E5         ?C0028:
                                           ; SOURCE LINE # 185
00E5 7410              MOV     A,#010H
00E7 2500        R     ADD     A,x
00E9 F500        R     MOV     x,A
                                           ; SOURCE LINE # 186
00EB 8004              SJMP    ?C0024
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
00ED         ?C0025:
00ED 0E                INC     R6
00EE 020000      R     LJMP    ?C0023
00F1         ?C0024:
                                           ; SOURCE LINE # 189
00F1 7403              MOV     A,#03H
00F3 29                ADD     A,R1
00F4 F9                MOV     R1,A
00F5 E4                CLR     A
00F6 3A                ADDC    A,R2
00F7 FA                MOV     R2,A
                                           ; SOURCE LINE # 190
00F8 020000      R     LJMP    ?C0021
00FB         ?C0022:
                                           ; SOURCE LINE # 191
00FB 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 192
00FD         ?C0019:
00FD 22                RET     
             ; FUNCTION _Lcd12864_Write16CnCHAR (END)

C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 12  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
Lcd12864_Init. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
typFNT_GB16. . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  35
  Index. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  3
  Msk. . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0003H  32
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
_LcdSt7565_WriteData . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_LcdSt7565_WriteCmd. . . . . . . . . .  PUBLIC   CODE   PROC     000AH  -----
  cmd. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
_Lcd12864_Write16CnCHAR. . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  x. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  y. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  cn . . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  x1 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
  x2 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  wordNum. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
Lcd12864_ClearScreen . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 13  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  page . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
GB_16. . . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  560
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
LCD12864_RD. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
LCD12864_CS. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
_delay_ms. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  t. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
LCD12864_RS. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
LCD12864_WR. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
LCD12864_RSET. . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    480    ----
   CONSTANT SIZE    =    560    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   ST7565                                                            04/21/2021 20:39:48 PAGE 14  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
